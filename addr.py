from yargy import (
    rule,
    or_, and_
)
from yargy.interpretation import fact
from yargy.predicates import (
    eq, lte, gte, gram, type, tag,
    length_eq,
    in_, in_caseless, dictionary,
    normalized, caseless,
    is_title
)
from yargy.pipelines import morph_pipeline
from yargy.tokenizer import QUOTES


Index = fact(
    'Index',
    ['value']
)
Country = fact(
    'Country',
    ['name']
)
Region = fact(
    'Region',
    ['name', 'type']
)
Settlement = fact(
    'Settlement',
    ['name', 'type']
)
Street = fact(
    'Street',
    ['name', 'type']
)
Building = fact(
    'Building',
    ['number', 'type']
)
Room = fact(
    'Room',
    ['number', 'type']
)
AddrPart = fact(
    'AddrPart',
    ['value']
)


def value(key):
    @property
    def field(self):
        return getattr(self, key)
    return field


class Index(Index):
    type = 'индекс'


class Country(Country):
    type = 'страна'
    value = value('name')


class Region(Region):
    value = value('name')


class Settlement(Settlement):
    value = value('name')


class Street(Settlement):
    value = value('name')


class Building(Building):
    value = value('number')


class Room(Room):
    value = value('number')


class AddrPart(AddrPart):
    @property
    def obj(self):
        from natasha import obj

        part = self.value
        return obj.AddrPart(part.value, part.type)


DASH = eq('-')
DOT = eq('.')

ADJF = gram('ADJF')
NOUN = gram('NOUN')
INT = type('INT')
TITLE = is_title()

ANUM = rule(
    INT,
    DASH.optional(),
    in_caseless({
        #'я', 'й', 'е',
        #'ое', 'ая', 'ий', 'ой'
    })
)


#########
#
#  COUNTRY
#
##########


# TODO
COUNTRY_VALUE = dictionary({
    'россия',
    'украина',
    'абхазия'
})

ABBR_COUNTRY_VALUE = in_caseless({
    'рф'
})

COUNTRY = or_(
    COUNTRY_VALUE,
    ABBR_COUNTRY_VALUE
).interpretation(
    Country.name
).interpretation(
    Country
)


#############
#
#  FED OKRUGA
#
############


FED_OKRUG_NAME = or_(
    rule(
        dictionary({
            'дальневосточный',
            'приволжский',
            'сибирский',
            'уральский',
            'центральный',
            'южный',
        })
    ),
    rule(
        caseless('северо'),
        DASH.optional(),
        dictionary({
            'западный',
            'кавказский'
        })
    )
).interpretation(
    Region.name
)

FED_OKRUG_WORDS = or_(
    rule(
        normalized('федеральный'),
        normalized('округ')
    ),
    rule(caseless('фо'))
).interpretation(
    Region.type.const('федеральный округ')
)

FED_OKRUG = rule(
    FED_OKRUG_WORDS,
    FED_OKRUG_NAME
).interpretation(
    Region
)


#########
#
#   RESPUBLIKA
#
############


RESPUBLIKA_WORDS = or_(
    rule(caseless('респ'), DOT.optional()),
    rule(normalized('республика'))
).interpretation(
    Region.type.const('республика')
)

RESPUBLIKA_ADJF = or_(
    rule(
        dictionary({
            'удмуртский',
            'чеченский',
            'чувашский',
        })
    ),
    rule(
        caseless('карачаево'),
        DASH.optional(),
        normalized('черкесский')
    ),
    rule(
        caseless('кабардино'),
        DASH.optional(),
        normalized('балкарский')
    )
).interpretation(
    Region.name
)

RESPUBLIKA_NAME = or_(
    rule(
        dictionary({
            'адыгея',
            'алтай',
            'башкортостан'
            'башкирия', # башкортостан
            'бурятия',
            'дагестан',
            'ингушетия',
            'калмыкия',
            'карелия',
            'коми',
            'крым',
            'мордовия',
            'татарстан',
            'тыва',
            'удмуртия',
            'хакасия',
            'саха',
            'марий',
            'якутия',
        })
    ),
    rule(caseless('марий'), caseless('эл')),
    rule(
        normalized('северный'), normalized('осетия'),
        rule('-', normalized('алания')).optional()
    )
).interpretation(
    Region.name
)

RESPUBLIKA_ABBR = in_caseless({
    'кбр',
    'кчр',
    'рт',  # Татарстан
}).interpretation(
    Region.name  # TODO type
)

RESPUBLIKA = or_(
    rule(RESPUBLIKA_ADJF, RESPUBLIKA_WORDS),
    rule(RESPUBLIKA_WORDS, RESPUBLIKA_NAME),
    rule(RESPUBLIKA_ABBR)
).interpretation(
    Region
)


##########
#
#   KRAI
#
########


KRAI_WORDS = normalized('край').interpretation(
    Region.type.const('край')
)

KRAI_NAME = dictionary({
    'алтайский',
    'забайкальский',
    'камчатский',
    'краснодарский',
    'красноярский',
    'пермский',
    'приморский',
    'ставропольский',
    'хабаровский',
}).interpretation(
    Region.name
)

KRAI = rule(
    KRAI_NAME, KRAI_WORDS
).interpretation(
    Region
)


############
#
#    OBLAST
#
############


OBLAST_WORDS = or_(
    rule(normalized('область')),
    rule(
        caseless('обл'),
        DOT.optional()
    )
).interpretation(
    Region.type.const('область')
)

OBLAST_NAME = dictionary({
    'амурский',
    'архангельский',
    'астраханский',
    'белгородский',
    'брянский',
    'владимирский',
    'волгоградский',
    'вологодский',
    'воронежский',
    'горьковский',
    'ивановский',
    'ивановский',
    'иркутский',
    'калининградский',
    'калужский',
    'камчатский',
    'кемеровский',
    'кировский',
    'костромской',
    'курганский',
    'курский',
    'ленинградский',
    'липецкий',
    'магаданский',
    'московская',
    'мурманский',
    'нижегородский',
    'новгородский',
    'новосибирский',
    'омский',
    'оренбургский',
    'орловский',
    'пензенский',
    'пермский',
    'псковский',
    'ростовский',
    'рязанский',
    'самарский',
    'саратовский',
    'сахалинский',
    'свердловский',
    'смоленский',
    'тамбовский',
    'тверской',
    'томский',
    'тульский',
    'тюменский',
    'ульяновский',
    'челябинский',
    'читинский',
    'подмосковье',
    'мос',
    'лен.',
    'мос.',
    'мос.обл.',
    'Мос.обл.',
    'мос обл',
    'ленобласть',
    'лен обл',
    'ярославский',
}).interpretation(
    Region.name
)

OBLAST = rule(
    OBLAST_NAME,
    OBLAST_WORDS
).interpretation(
    Region
)


##########
#
#    AUTO OKRUG
#
#############


AUTO_OKRUG_NAME = or_(
    rule(
        dictionary({
            'чукотский',
            'эвенкийский',
            'корякский',
            'ненецкий',
            'таймырский',
            'агинский',
            'бурятский',
        })
    ),
    rule(caseless('коми'), '-', normalized('пермяцкий')),
    rule(caseless('долгано'), '-', normalized('ненецкий')),
    rule(caseless('ямало'), '-', normalized('ненецкий')),
).interpretation(
    Region.name
)

AUTO_OKRUG_WORDS = or_(
    rule(
        normalized('автономный'),
        normalized('округ')
    ),
    rule(caseless('ао'))
).interpretation(
    Region.type.const('автономный округ')
)

HANTI = rule(
    caseless('ханты'), '-', normalized('мансийский')
).interpretation(
    Region.name
)

BURAT = rule(
    caseless('усть'), '-', normalized('ордынский'),
    normalized('бурятский')
).interpretation(
    Region.name
)

AUTO_OKRUG = or_(
    rule(AUTO_OKRUG_NAME, AUTO_OKRUG_WORDS),
    or_(
        rule(
            HANTI,
            AUTO_OKRUG_WORDS,
            '-', normalized('югра')
        ),
        rule(
            caseless('хмао'),
        ).interpretation(Region.name),
        rule(
            caseless('хмао'),
            '-', caseless('югра')
        ).interpretation(Region.name),
    ),
    rule(
        BURAT,
        AUTO_OKRUG_WORDS
    )
).interpretation(
    Region
)


##########
#
#  RAION
#
###########


RAION_WORDS = or_(
    rule(caseless('р'), '-', in_caseless('н')),   #in_caseless({'он', 'н'}))
    rule(normalized('район'))
).interpretation(
    Region.type.const('')
)

RAION_SIMPLE_NAME = and_(
    ADJF,
    TITLE
)

RAION_MODIFIERS = rule(
    in_caseless({
        'усть',
        'северо',
        'александрово',
        'гаврилово',
    }),
    DASH.optional(),
    TITLE
)
RAION_NAME = dictionary({
     'зарядье',
'арбат',
'басманный',
'замоскворечье',
'красносельский', 
'мещанский',
'пресненский',
'таганский',
'тверской',
'хамовники',
'якиманка',
'беговой',
'бескудниковский',
'войковский',
'дегунино',
'головинский',
'дмитровский',
'коптево',
'левобережный',
'молжаниновский',
'савёловский',
'тимирязевский',
'ховрино',
'хорошёвский',
'алексеевский',
'алтуфьевский',
'бабушкинский',
'бибирево',
'бутырский район',
'лианозово',
'лосиноостровский',
'марфино',
'марьина роща',
'останкинский',
'отрадное',
'ростокино',
'свиблово',
#'северный',
'медведково',
'ярославский',
'богородское',
'вешняки',
#'восточный',
'измайлово',
'гольяново',
'ивановское',
'косино-ухтомский',
'метрогородок',
'новогиреево',
'новокосино',
'перово',
'преображенское',
'соколиная гора',
'сокольники',
'выхино-жулебино',
'капотня',
'кузьминки',
'лефортово',
'люблино',
'марьино',
'некрасовка',
'нижегородский',
'печатники',
'рязанский',
'текстильщики',
'южнопортовый',
'бирюлёво', 
'братеево',
'даниловский',
#'донской',
'зябликово',
'москворечье-сабурово',
'нагатино-садовники',
'нагатинский затон',
'нагорный',
'орехово-борисово', 
'царицыно',
'чертаново',
'академический',
'гагаринский',
'зюзино',
'коньково',
'котловка',
'ломоносовский',
'обручевский',
'северное бутово',
'тёплый стан',
'черёмушки',
'южное бутово',
'ясенево',
'внуково',
'дорогомилово',
'крылатское',
'кунцево',
'можайский',
'ново-переделкино',
'очаково-матвеевское',
'проспект вернадского',
'раменки',
'солнцево',
'тропарёво-никулино',
'филёвский парк',
'фили-давыдково',
'куркино',
'митино',
'покровское-стрешнево',
'тушино',
'строгино',
'хорошёво-мнёвники',
'щукино',
'матушкино',
'савёлки',
'старое крюково',
'силино',
'крюково',
'одинцовский',
     'абдулинский',
     'абинский',
     'агрызский',
     'азнакаевский',
     'аксайский',
     'алагирский',
     'алданский',
     'алексеевский',
     'алексинский',
     'альметьевский',
     'анапский',
     'анивский',
     'апшеронский',
     'ардатовский',
     'ардонский',
     'аркадакский',
     'арский',
     'артемовский',
     'асиновский',
     'ахтубинский',
     'ашинский',
     'бабаевский',
     'бавлинский',
     'багратионовский',
     'баймакский',
     'балахнинский',
     'балейский',
     'балтийский',
     'барабинский',
     'барышский',
     'бахчисарайский',
     'бежецкий',
     'белебеевский',
     'белевский',
     'белинский',
     'белогорский',
     'белозерский',
     'белокалитвинский',
     'беломорский',
     'белорецкий',
     'белореченский',
     'белохолуницкий',
     'бельский',
     'билибинский',
     'бирский',
     'благовещенский',
     'благодарненский',
     'бобровский',
     'богдановичский',
     'богородицкий',
     'богородский',
     'богучарский',
     'бокситогорский',
     'бологовский',
     'болотнинский',
     'болховский',
     'борзинский',
     'борисоглебский',
     'боровичский',
     'боровский',
     'братский',
     'бугульминский',
     'буденновский',
     'буинский',
     'буйский',
     'бутурлиновский',
     'валдайский',
     'валуйский',
     'велижский',
     'великоустюгский',
     'вельский',
     'веневский',
     'верещагинский',
     'верхнекамский',
     'верхнеуральский',
     'верхнеуслонский',
     'верхотурский',
     'верхоянский',
     'ветлужский',
     'вилюйский',
     'вичугский',
     'володарский',
     'волосовский',
     'волховский',
     'воскресенск',
     'всеволожский',
     'выборгский',
     'вытегорский',
     'вяземский',
     'вязниковский',
     'вятскополянский',
     'гаврилов-ямский',
     'гаврилово-посадский',
     'гагаринский',
     'галичский',
     'гатчинский',
     'гвардейский',
     'гдовский',
     'горнозаводский',
     'городецкий',
     'городищенский',
     'городовиковский',
     'гороховецкий',
     'грайворонский',
     'грязинский',
     'грязовецкий',
     'гудермесский',
     'гулькевичский',
     'гурьевский',
     'гусевский',
     'гусь-хрустальный',
     'давлекановский',
     'далматовский',
     'даниловский',
     'данковский',
     'демидовский',
     'дзержинский',
     'дзун-хемчикский',
     'дигорский',
     'дмитриевский',
     'дмитров',
     'дмитровский',
     'дновский',
     'долинский',
     'дорогобужский',
     'дубовский',
     'духовщинский',
     'дюртюлинский',
     'дятьковский',
     'ейский',
     'елабужский',
     'елизовский',
     'ельнинский',
     'еманжелинский',
     'ершовский',
     'ефремовский',
     'жердевский',
     'жиздринский',
     'жирновский',
     'жуковский',
     'завитинский',
     'заволжский',
     'задонский',
     'заинский',
     'закаменский',
     'звениговский',
     'зеленоградский',
     'зеленодольский',
     'зерноградский',
     'злынковский',
     'змеиногорский',
     'зубцовский',
     'зуевский',
     'ивановский',
     'изобильненский',
     'иланский',
     'ильинский',
     'инзенский',
     'инсарский',
     'ипатовский',
     'исилькульский',
     'истра',
     'ишимбайский',
     'кабанский',
     'кавказский',
     'калачевский',
     'калачеевский',
     'калачинский',
     'калининский',
     'калязинский',
     'камбарский',
     'каменский',
     'камешковский',
     'камызякский',
     'камышинский',
     'кандалакшский',
     'карасукский',
     'карачевский',
     'каргатский',
     'каргопольский',
     'карталинский',
     'каслинский',
     'катав-ивановский',
     'катайский',
     'кежемский',
     'кемский',
     'кимовский',
     'кингисеппский',
     'кинешемский',
     'киреевский',
     'киренский',
     'киржачский',
     'кирилловский',
     'киришский',
     'кировский',
     'клепиковский',
     'клин',
     'княгининский',
     'княжпогостский',
     'ковдорский',
     'козельский',
     'козловский',
     'кологривский',
     'колпашевский',
     'кольский',
     'кольчугинский',
     'комсомольский',
     'конаковский',
     'кондопожский',
     'константиновский',
     'кораблинский',
     'кореновский',
     'коркинский',
     'корочанский',
     'корсаковский',
     'котельниковский',
     'котельничский',
     'котласский',
     'котовский',
     'красновишерский',
     'красногвардейский',
     'краснознаменский',
     'краснокаменский',
     'краснокутский',
     'краснослободский',
     'красносулинский',
     'крымский',
     'кстовский',
     'кувшиновский',
     'куйбышевский',
     'кукморский',
     'купинский',
     'курагинский',
     'курганинский',
     'курильский',
     'куртамышский',
     'курчалоевский',
     'кусинский',
     'кяхтинский',
     'лабинский',
     'лаганский',
     'лаишевский',
     'лахденпохский',
     'лебедянский',
     'лениногорский',
     'ленинский',
     'ленский',
     'лискинский',
     'лихославльский',
     'лодейнопольский',
     'локтевский',
     'лужский',
     'лузский',
     'лукояновский',
     'лысковский',
     'любимский',
     'людиновский',
     'майский',
     'макаровский',
     'макарьевский',
     'макушинский',
     'малмыжский',
     'малоархангельский',
     'маловишерский',
     'малоярославецкий',
     'мамадышский',
     'мантуровский',
     'мариинский',
     'мариинско-посадский',
     'мглинский',
     'медвежьегорский',
     'медынский',
     'мезенский',
     'меленковский',
     'мелеузовский',
     'менделеевский',
     'мензелинский',
     'мещовский',
     'миллеровский',
     'минераловодский',
     'мирнинский',
     'михайловский',
     'могочинский',
     'моздокский',
     'морозовский',
     'мосальский',
     'мурашинский',
     'мышкинский',
     'называевский',
     'наримановский',
     'наро-фоминск',
     'наро фоминский',
     'невельский',
     'нейский',
     'неманский',
     'нерехтский',
     'нерчинский',
     'нестеровский',
     'нефтегорский',
     'нефтекумский',
     'нижнеилимский',
     'нижнекамский',
     'нижнеломовский',
     'нижнесергинский',
     'нижнеудинский',
     'николаевский',
     'никольский',
     'новоалександровский',
     'новоаннинский',
     'новокубанский',
     'новолялинский',
     'новомосковский',
     'новооскольский',
     'новоржевский',
     'новосильский',
     'новосокольнический',
     'новоузенский',
     'новохоперский',
     'ногинск',
     'нолинский',
     'нурлатский',
     'нытвенский',
     'нюрбинский',
     'нязепетровский',
     'няндомский',
     'облученский',
     'обоянский',
     'одинцово',
     'озерский',
     'окуловский',
     'олекминский',
     'олонецкий',
     'омутнинский',
     'онежский',
     'опочецкий',
     'орехово-зуево',
     'орловский',
     'осинский',
     'островский',
     'острогожский',
     'оханский',
     'охинский',
     'очерский',
     'павловский',
     'палласовский',
     'пестовский',
     'петровск-забайкальский',
     'петровский',
     'петуховский',
     'петушинский',
     'печенгский',
     'печорский',
     'пий-хемский',
     'питкярантский',
     'плавский',
     'пластовский',
     'поворинский',
     'подпорожский',
     'полесский',
     'поронайский',
     'порховский',
     'почепский',
     'починковский',
     'пошехонский',
     'правдинский',
     'правобережный',
     'приволжский',
     'приморско-ахтарский',
     'приозерский',
     'пролетарский',
     'пронский',
     'пудожский',
     'пуровский',
     'пустошкинский',
     'пучежский',
     'пыталовский',
     'режевской',
     'родниковский',
     'рославльский',
     'россошанский',
     'ростовский',
     'руднянский',
     'рыбинский',
     'рыбновский',
     'рыльский',
     'ряжский',
     'сальский',
     'саткинский',
     'сафоновский',
     'светлогорский',
     'себежский',
     'северо-курильский',
     'севский',
     'сегежский',
     'селенгинский',
     'семикаракорский',
     'семилукский',
     'сенгилеевский',
     'серафимовичский',
     'сергачский',
     'сергиев посад',
     'сердобский',
     'сковородинский',
     'славский',
     'славянский',
     'сланцевский',
     'слободской',
     'слюдянский',
     'собинский',
     'советский',
     'сокольский',
     'солецкий',
     'солигаличский',
     'соль-илецкий',
     'спас-деменский',
     'спасский',
     'среднеахтубинский',
     'среднеколымский',
     'сретенский',
     'старицкий',
     'старорусский',
     'суворовский',
     'суджанский',
     'судогодский',
     'суздальский',
     'суоярвский',
     'суражский',
     'сургутский',
     'суровикинский',
     'сусуманский',
     'сухиничский',
     'сухоложский',
     'сысертский',
     'сычевский',
     'таймырский долгано-ненецкий',
     'тайшетский',
     'талицкий',
     'тарский',
     'тарусский',
     'татарский',
     'таштагольский',
     'тейковский',
     'темниковский',
     'темрюкский',
     'терский',
     'тетюшский',
     'тимашевский',
     'тихвинский',
     'тихорецкий',
     'тогучинский',
     'томаринский',
     'топкинский',
     'торопецкий',
     'тосненский',
     'тотемский',
     'трубчевский',
     'туапсинский',
     'туймазинский',
     'туринский',
     'туруханский',
     'тутаевский',
     'тюкалинский',
     'углегорский',
     'угличский',
     'ужурский',
     'узловский',
     'улуг-хемский',
     'унечский',
     'урванский',
     'уренский',
     'уржумский',
     'урус-мартановский',
     'усманский',
     'усольский',
     'усть-вымский',
     'усть-джегутинский',
     'усть-лабинский',
     'устюженский',
     'учалинский',
     'уярский',
     'фатежский',
     'фурмановский',
     'хангаласский',
     'харабалинский',
     'харовский',
     'хилокский',
     'холмский',
     'цивильский',
     'цимлянский',
     'чаплыгинский',
     'чаунский',
     'чегемский',
     'чердынский',
     'черепановский',
     'чернушинский',
     'черняховский',
     'чистопольский',
     'чкаловский',
     'чудовский',
     'чулымский',
     'чухломский',
     'шалинский',
     'шарьинский',
     'шатура',
     'шацкий',
     'шенкурский',
     'шилкинский',
     'шпаковский',
     'шуйский',
     'шумихинский',
     'щекинский',
     'щучанский',
     'эльбрусский',
     'эртильский',
     'южский',
     'юрьев-польский',
     'юрьевецкий',
     'юхновский',
     'ядринский',
     'яковлевский',
     'янаульский',
     'яранский',
     'подмосковье',
     'ярцевский',
     'ясногорский',
}).interpretation(
    Region.name
)    
RAION_COMPLEX_NAME = rule(
    RAION_MODIFIERS,
    RAION_SIMPLE_NAME,
    RAION_NAME
)

RAION = or_(
    RAION_NAME,
    RAION_WORDS, 
    RAION_MODIFIERS
).interpretation(
    Region.name
).interpretation(
    Region
)



###########
#
#   GOROD
#
###########


# Top 200 Russia cities, cover 75% of population

COMPLEX = morph_pipeline([
    'санкт-петербург',
    'нижний новгород',
    'н.новгород',
    'ростов-на-дону',
    'набережные челны',
    'улан-удэ',
    'нижний тагил',
    'комсомольск-на-амуре',
    'йошкар-ола',
    'старый оскол',
    'великий новгород',
    'южно-сахалинск',
    'петропавловск-камчатский',
    'каменск-уральский',
    'орехово-зуево',
    'сергиев посад',
    'наро-фоминский',
    'новый уренгой',
    'ленинск-кузнецкий',
    'великие луки',
    'каменск-шахтинский',
    'усть-илимск',
    'усолье-сибирский',
    'юрьев-польский',
    'кирово-чепецк',
])

SIMPLE = dictionary({
     'абинск',
     'сходня',
     'витязево',
     'железнодорожный',
     'агидель',
     'адыгейск',
     'алейск',
     'алексеевка',
     'алзамай',
     'алушта',
     'анапа',
     'ангарск',
     'анжеро-судженск',
     'апшеронск',
     'армавир',
     'армянск',
     'артемовск',
     'архангельск',
     'астрахань',
     'ахтубинск',
     'ачинск',
     'бабаево',
     'бабушкин',
     'багратионовск',
     'байкальск',
     'баймак',
     'баксан',
     'балабаново',
     'балей',
     'балтийск',
     'барнаул',
     'бахчисарай',
     'белая холуница',
     'белгород',
     'белебей',
     'белово',
     'белогорск',
     'белозерск',
     'белокуриха',
     'беломорск',
     'белорецк',
     'белореченск',
     'белоусово',
     'березовский',
     'бийск',
     'биробиджан',
     'бирск',
     'бирюсинск',
     'бирюч',
     'благовещенск',
     'бобров',
     'боготол',
     'богучар',
     'бодайбо',
     'бокситогорск',
     'борзя',
     'борисоглебск',
     'боровск',
     'бородино',
     'братск',
     'брянск',
     'буй',
     'буйнакск',
     'бутурлиновка',
     'валуйки',
     'великий устюг',
     'вельск',
     'вилючинск',
     'вихоревка',
     'вичуга',
     'владимир',
     'волгоград',
     'волгореченск',
     'волжск',
     'волжский',
     'вологда',
     'волосово',
     'волхов',
     'воркута',
     'воронеж',
     'всеволожск',
     'вуктыл',
     'выборг',
     'высоцк',
     'вытегра',
     'вязники',
     'вятские поляны',
     'гаврилов посад',
     'галич',
     'гатчина',
     'гвардейск',
     'геленджик',
     'горно-алтайск',
     'горняк',
     'городовиковск',
     'гороховец',
     'горячий ключ',
     'грайворон',
     'грязи',
     'грязовец',
     'губкин',
     'гулькевичи',
     'гурьевск',
     'гусев',
     'гусиноозерск',
     'гусь-хрустальный',
     'давлеканово',
     'дагестанские огни',
     'далматово',
     'данков',
     'дербент',
     'джанкой',
     'дивногорск',
     'дубовка',
     'дудинка',
     'дюртюли',
     'дятьково',
     'евпатория',
     'ейск',
     'елец',
     'елизово',
     'емва',
     'енисейск',
     'ермолино',
     'железногорск',
     'железногорск-илимский',
     'жиздра',
     'жирновск',
     'жуков',
     'жуковка',
     'завитинск',
     'заволжск',
     'задонск',
     'закаменск',
     'заозерный',
     'заринск',
     'звенигово',
     'зеленогорск',
     'зеленоградск',
     'зея',
     'злынка',
     'змеиногорск',
     'знаменск',
     'зуевка',
     'ивангород',
     'иваново',
     'игарка',
     'избербаш',
     'иланский',
     'инта',
     'иркутск',
     'ишимбай',
     'кадников',
     'калач',
     'калач-на-дону',
     'калининград',
     'калтан',
     'калуга',
     'каменногорск',
     'камень-на-оби',
     'камешково',
     'камызяк',
     'камышин',
     'канск',
     'карабаново',
     'карабулак',
     'карачаевск',
     'карачев',
     'каргополь',
     'каспийск',
     'катайск',
     'кемерово',
     'кемь',
     'керчь',
     'кизилюрт',
     'кизляр',
     'кингисепп',
     'кинешма',
     'киренск',
     'киржач',
     'кириллов',
     'кириши',
     'киров',
     'кирово-чепецк',
     'кировск',
     'кирс',
     'киселевск',
     'клинцы',
     'ковров',
     'кодинск',
     'козельск',
     'кологрив',
     'кольчугино',
     'коммунар',
     'комсомольск',
     'кондопога',
     'кондрово',
     'кореновск',
     'коряжма',
     'костерево',
     'костомукша',
     'кострома',
     'котельниково',
     'котельнич',
     'котлас',
     'котово',
     'кохма',
     'красавино',
     'краснодар',
     'краснознаменск',
     'краснокаменск',
     'красноперекопск',
     'краснослободск',
     'красноярск',
     'кременки',
     'кропоткин',
     'крымск',
     'кудрово',
     'кумертау',
     'курган',
     'курганинск',
     'курлово',
     'курск',
     'куртамыш',
     'курчатов',
     'кяхта',
     'лабинск',
     'лагань',
     'ладушкин',
     'лакинск',
     'лахденпохья',
     'лебедянь',
     'ленинск',
     'ленинск-кузнецкий',
     'лесосибирск',
     'липецк',
     'лиски',
     'лодейное поле',
     'луга',
     'луза',
     'льгов',
     'любань',
     'людиново',
     'магадан',
     'магас',
     'майкоп',
     'майский',
     'макарьев',
     'макушино',
     'малгобек',
     'малмыж',
     'малоярославец',
     'мамоново',
     'мантурово',
     'мариинск',
     'махачкала',
     'мглин',
     'медвежьегорск',
     'медынь',
     'межгорье',
     'междуреченск',
     'мезень',
     'меленки',
     'мелеуз',
     'мещовск',
     'микунь',
     'минусинск',
     'мирный',
     'михайловка',
     'могоча',
     'мосальск',
     'мураши',
     'мурино',
     'муром',
     'мыски',
     'наволоки',
     'назарово',
     'назрань',
     'нальчик',
     'нариманов',
     'нарткала',
     'неман',
     'нерехта',
     'нерчинск',
     'нестеров',
     'нефтекамск',
     #'нея',
     'нижнеудинск',
     'николаевск',
     'никольск',
     'никольское',
     'новая ладога',
     'новоалтайск',
     'новоаннинский',
     'нововоронеж',
     'новодвинск',
     'новозыбков',
     'новокубанск',
     'новокузнецк',
     'новороссийск',
     'новохоперск',
     'новый оскол',
     'нолинск',
     'норильск',
     'няндома',
     'облучье',
     'обнинск',
     'обоянь',
     'озерск',
     'октябрьский',
     'олонец',
     'омутнинск',
     'онега',
     'орлов',
     'осинники',
     'острогожск',
     'отрадное',
     'павловск',
     'палласовка',
     'петров вал',
     'петровск-забайкальский',
     'петрозаводск',
     'петропавловск-камчатский',
     'петухово',
     'петушки',
     'печора',
     'пикалево',
     'пионерский',
     'питкяранта',
     #'плес',
     'поворино',
     'подпорожье',
     'покров',
     'полесск',
     'полысаево',
     'почеп',
     'правдинск',
     'приволжск',
     'приморск',
     'приморско-ахтарск',
     'приозерск',
     'прокопьевск',
     'прохладный',
     'пудож',
     'пучеж',
     'радужный',
     'райчихинск',
     'родники',
     'россошь',
     'рубцовск',
     'рыльск',
     'саки',
     'салават',
     'салаир',
     'саянск',
     'светлогорск',
     'светлый',
     'светогорск',
     'свирск',
     'северобайкальск',
     'северодвинск',
     #'севск',
     'сегежа',
     'сельцо',
     'семилуки',
     'серафимович',
     'сертолово',
     'сибай',
     'симферополь',
     'сковородино',
     'славгород',
     'славск',
     'славянск-на-кубани',
     'сланцы',
     'слободской',
     'слюдянка',
     'собинка',
     'советск',
     'сокол',
     'солигалич',
     'сольвычегодск',
     'сортавала',
     'сосенский',
     'сосновка',
     'сосновоборск',
     'сосновый бор',
     'сосногорск',
     'сочи',
     'спас-деменск',
     'сретенск',
     'стародуб',
     'старый крым',
     'старый оскол',
     'стерлитамак',
     'строитель',
     'струнино',
     'судак',
     'суджа',
     'судогда',
     'суздаль',
     'сунжа',
     'суоярви',
     'сураж',
     'суровикино',
     'сусуман',
     'сухиничи',
     'сыктывкар',
     'сясьстрой',
     'тайга',
     'тайшет',
     'таруса',
     'таштагол',
     'теберда',
     'тейково',
     'темрюк',
     'терек',
     'тимашевск',
     'тихвин',
     'тихорецк',
     'топки',
     'тосно',
     'тотьма',
     'трубчевск',
     'туапсе',
     'туймазы',
     'тулун',
     'тында',
     'тырныауз',
     'ужур',
     'улан-удэ',
     'унеча',
     'уржум',
     'урюпинск',
     'усинск',
     'усмань',
     'усолье-сибирское',
     'усть-джегута',
     'усть-илимск',
     'усть-кут',
     'усть-лабинск',
     'устюжна',
     'уфа',
     'ухта',
     'учалы',
     #'уяр',
     'фатеж',
     'феодосия',
     'фокино',
     'фролово',
     'фурманов',
     'хадыженск',
     'харабали',
     'харовск',
     'хасавюрт',
     'хилок',
     'циолковский',
     'чаплыгин',
     'чегем',
     'черемхово',
     'череповец',
     'черкесск',
     'черняховск',
     'чита',
     'чухлома',
     'шадринск',
     'шарыпово',
     'шарья',
     'шебекино',
     'шелехов',
     'шенкурск',
     'шилка',
     'шимановск',
     'шлиссельбург',
     'шумиха',
     'шуя',
     'щелкино',
     'щигры',
     'щучье',
     'элиста',
     'эртиль',
     'южа',
     'южно-сухокумск',
     'юрга',
     'юрьев-польский',
     'юрьевец',
     'юхнов',
     'ялта',
     'янаул',
     'яранск',
     'яровое',
     'абдулино',
     'агрыз',
     'азнакаево',
     'азов',
     'ак-довурак',
     'аксай',
     'алагир',
     'алапаевск',
     'алексин',
     'альметьевск',
     'андреаполь',
     'анива',
     'апатиты',
     'апрелевка',
     'арамиль',
     'ардатов',
     'ардон',
     'арзамас',
     'аркадак',
     'арсеньев',
     'арск',
     'артем',
     'артемовский',
     'асбест',
     'асино',
     'аткарск',
     'бавлы',
     'балаково',
     'балахна',
     'балашиха',
     'балашов',
     'барабинск',
     'батайск',
     'бежецк',
     'белая калитва',
     'белев',
     'белинский',
     'белоозёрский',
     'бердск',
     'березники',
     'березовский',
     'беслан',
     'благодарный',
     'богданович',
     'богородицк',
     'богородск',
     'болгар',
     'бологое',
     'болотное',
     'болохово',
     'болхов',
     'большой камень',
     'боровичи',
     'бронницы',
     'бугульма',
     'бугуруслан',
     'буденновск',
     'бузулук',
     'буинск',
     'валдай',
     'велиж',
     'великие луки',
     'великий новгород',
     'венев',
     'верещагино',
     'верея',
     'верхний тагил',
     'верхняя пышма',
     'верхняя салда',
     'верхняя тура',
     'верхотурье',
     'весьегонск',
     'ветлуга',
     'видное',
     'владивосток',
     'владикавказ',
     'волгодонск',
     'володарск',
     'волоколамск',
     'волчанск',
     'вольск',
     'ворсма',
     'воткинск',
     'выкса',
     'высоковск',
     'вышний волочек',
     'вязьма',
     'гагарин',
     'гаджиево',
     'гай',
     'гдов',
     'георгиевск',
     'глазов',
     'голицыно',
     'горбатов',
     'горнозаводск',
     'городец',
     'городище',
     'гремячинск',
     'губаха',
     'гуково',
     'дальнегорск',
     'дальнереченск',
     'дегтярск',
     'дедовск',
     'демидов',
     'десногорск',
     'дзержинск',
     'дзержинский',
     'дигора',
     'дно',
     'добрянка',
     'долгопрудный',
     'долинск',
     'домодедово',
     'донецк',
     'донской',
     'дорогобуж',
     'дрезна',
     'дубна',
     'духовщина',
     'егорьевск',
     'екатеринбург',
     'елабуга',
     'ельня',
     'ершов',
     'ессентуки',
     'ефремов',
     'железноводск',
     'жердевка',
     'жигулевск',
     'жуковский',
     'заводоуковск',
     'заволжье',
     'заинск',
     'заозерск',
     'западная двина',
     'заполярный',
     'зарайск',
     'заречный',
     'звенигород',
     'зверево',
     'зеленодольск',
     'зеленокумск',
     'зерноград',
     'зубцов',
     'ивантеевка',
     'ивдель',
     'ижевск',
     'изобильный',
     'иннополис',
     'инсар',
     'ипатово',
     'ирбит',
     'исилькуль',
     'искитим',
     'ишим',
     'казань',
     'калачинск',
     'калининск',
     'калязин',
     'каменка',
     'каменск-уральский',
     'каменск-шахтинский',
     'камышлов',
     'кандалакша',
     'карасук',
     'каргат',
     'карпинск',
     'касимов',
     'качканар',
     'кашин',
     'кашира',
     'кедровый',
     'кизел',
     'кимовск',
     'кимры',
     'кинель',
     'киреевск',
     'кировград',
     'кировск',
     'кирсанов',
     'кисловодск',
     'княгинино',
     'ковдор',
     'ковылкино',
     'козьмодемьянск',
    # 'кола',
     'коломна',
     'колпашево',
     'конаково',
     'константиновск',
     'кораблино',
     'королёв',
     'корсаков',
     'котельники',
     'котовск',
     'красноармейск',
     'красновишерск',
     'красногорск',
     'краснозаводск',
     'краснознаменск',
     'краснокамск',
     'краснослободск',
     'краснотурьинск',
     'красноуральск',
     'красноуфимск',
     'красный кут',
     'красный сулин',
     'красный холм',
     'кстово',
     'кубинка',
     'кувандык',
     'кувшиново',
     'кудымкар',
     'кузнецк',
     'куйбышев',
     'кукмор',
     'кулебаки',
     'кунгур',
     'купино',
     'курильск',
     'куровское',
     'кушва',
     'кызыл',
     'лаишево',
     'лениногорск',
     'лермонтов',
     'лесной',
     'лесозаводск',
     'ливны',
     'ликино-дулёво',
     'липки',
     'лихославль',
     'лобня',
     'лосино-петровский',
     'лукоянов',
     'луховицы',
     'лысково',
     'лысьва',
     'лыткарино',
     'люберцы',
     'макаров',
     'малая вишера',
     'малоархангельск',
     'мамадыш',
     'маркс',
     'медногорск',
     'менделеевск',
     'мензелинск',
     'миллерово',
     'минеральные воды',
     'михайлов',
     'михайловск',
     'мичуринск',
     'можайск',
     'моздок',
     'мончегорск',
     'морозовск',
     'моршанск',
     'мурманск',
     'мценск',
     'мытищи',
     'набережные челны',
     'навашино',
     'называевск',
     'нарьян-мар',
     'находка',
     'невель',
     'невельск',
     'невинномысск',
     'невьянск',
     'нелидово',
     'нефтегорск',
     'нефтекумск',
     'нижнекамск',
     'нижние серги',
     'нижний ломов',
     'нижний новгород',
     'нижний тагил',
     'нижняя салда',
     'нижняя тура',
     'никольск',
     'новая ляля',
     'новоалександровск',
     'новокуйбышевск',
     'новомичуринск',
     'новомосковск',
     'новопавловск',
     'новоржев',
     'новосибирск',
     'новосиль',
     'новосокольники',
     'новотроицк',
     'новоузенск',
     'новоуральск',
     'новочеркасск',
     'новошахтинск',
     'нурлат',
     'нытва',
     'обь',
     'озёры',
     'октябрьск',
     'окуловка',
     'оленегорск',
     'омск',
     'опочка',
     'оренбург',
     'орск',
     'орёл',
     'оса',
     'осташков',
     'остров',
     'островной',
     'отрадный',
     'оха',
     'оханск',
     'очер',
     'павлово',
     'павловский посад',
     'партизанск',
     'пенза',
     'первомайск',
     'первоуральск',
     'перевоз',
     'пересвет',
     'пермь',
     'пестово',
     'петровск',
     'печоры',
     'плавск',
     'подольск',
     'полевской',
     'полярные зори',
     'полярный',
     'поронайск',
     'порхов',
     'похвистнево',
     'починок',
     'пролетарск',
     'протвино',
     'псков',
     'пугачев',
     'пустошка',
     'пушкино',
     'пущино',
     'пыталово',
     'пятигорск',
     'раменское',
     'рассказово',
     'ревда',
     #'реж',
     'реутов',
     'ржев',
     'рославль',
     'ростов-на-дону',
     'рошаль',
     'ртищево',
     'рудня',
     'руза',
     'рузаевка',
     'рыбное',
     'ряжск',
     'рязань',
     'сальск',
     'самара',
     'саранск',
     'саратов',
     'саров',
     'сасово',
     'сафоново',
     'светлоград',
     'себеж',
     'северо-курильск',
     'североморск',
     'североуральск',
     'северск',
     'семенов',
     'семикаракорск',
     'сергач',
     'сердобск',
     'серов',
     'серпухов',
     'скопин',
     'смоленск',
     'снежногорск',
     'советск',
     'соликамск',
     'солнечногорск',
     'соль-илецк',
     'сольцы',
     'сорочинск',
     'спас-клепики',
     'спасск',
     'спасск-дальний',
     'спасск-рязанский',
     'среднеуральск',
     'ставрополь',
     'старая купавна',
     'старая русса',
     'старица',
     'стрежевой',
     'ступино',
     'суворов',
     'сурск',
     'сухой лог',
     'сызрань',
     'сысерть',
     'сычевка',
     'тавда',
     'таганрог',
     'талдом',
     'талица',
     'тамбов',
     'тара',
     'татарск',
     'тверь',
     'темников',
     'тетюши',
     'тобольск',
     'тогучин',
     'тольятти',
     'томари',
     'томск',
     'торжок',
     'торопец',
     'тула',
     'туран',
     'туринск',
     'тюкалинск',
     'тюмень',
     'уварово',
     'углегорск',
     'удомля',
     'узловая',
     'урень',
     'усолье',
     'уссурийск',
     'фокино',
     'фрязино',
     'хвалынск',
     'химки',
     'холм',
     'холмск',
     'хотьково',
     'цимлянск',
     'чадан',
     'чайковский',
     'чапаевск',
     'чекалин',
     'чердынь',
     'черепаново',
     'чермоз',
     'черноголовка',
     'чернушка',
     'чехов',
     'чистополь',
     'чкаловск',
     'чудово',
     'чулым',
     'чусовой',
     'шагонар',
     'шахты',
     'шахунья',
     'шацк',
     'шиханы',
     'щекино',
     'щёлково',
     'электрогорск',
     'электросталь',
     'электроугли',
     'энгельс',
     'южно-сахалинск',
     'ялуторовск',
     'ярцево',
     'ясногорск',
     'ясный',
     'яхрома',
     'абаза',
     'абакан',
     'алатырь',
     'алдан',
     'амурск',
     'анадырь',
     'аргун',
     'аша',
     'бакал',
     'барыш',
     'белоярский',
     'бикин',
     'билибино',
     'верхнеуральск',
     'верхний уфалей',
     'верхоянск',
     'вилюйск',
     'вяземский',
     'гаврилов-ям',
     'грозный',
     'губкинский',
     'гудермес',
     'данилов',
     'димитровград',
     'еманжелинск',
     'златоуст',
     'инза',
     'канаш',
     'карабаш',
     'карталы',
     'касли',
     'катав-ивановск',
     'когалым',
     'козловка',
     'комсомольск-на-амуре',
     'копейск',
     'коркино',
     'курчалой',
     'куса',
     'кыштым',
     'лабытнанги',
     'лангепас',
     'ленск',
     'лянтор',
     'магнитогорск',
     'мариинский посад',
     'мегион',
     'миасс',
     'миньяр',
     'мирный',
     'можга',
     'муравленко',
     'мышкин',
     'надым',
     'нерюнгри',
     'нефтеюганск',
     'нижневартовск',
     'николаевск-на-амуре',
     'новоульяновск',
     'новочебоксарск',
     'новый уренгой',
     'ноябрьск',
     'нюрба',
     'нягань',
     'нязепетровск',
     'озерск',
     'олекминск',
     'певек',
     'переславль-залесский',
     'пласт',
     'покачи',
     'покровск',
     'пошехонье',
     'пыть-ях',
     'радужный',
     'ростов',
     'рыбинск',
     'салехард',
     'сарапул',
     'сатка',
     'саяногорск',
     'сенгилей',
     'снежинск',
     'советская гавань',
     'советский',
     'сорск',
     'среднеколымск',
     'сургут',
     'тарко-сале',
     'томмот',
     'трехгорный',
     'троицк',
     'тутаев',
     'углич',
     'удачный',
     'ульяновск',
     'урай',
     'усть-катав',
     'хабаровск',
     'ханты-мансийск',
     'цивильск',
     'чебаркуль',
     'чебоксары',
     'челябинск',
     'черногорск',
     'шали',
     'шумерля',
     'югорск',
     'южноуральск',
     'юрюзань',
     'ядрин',
     'якутск',
     'ярославль',
     'москва',
     'новосибирск',
     'екатеринбург',
     'казань',
     'самара',
     'омск',
     'челябинск',
     'уфа',
     'волгоград',
     'пермь',
     'красноярск',
     'воронеж',
     'саратов',
     'краснодар',
     'тольятти',
     'барнаул',
     'ижевск',
     'ульяновск',
     'владивосток',
     'ярославль',
     'иркутск',
     'тюмень',
     'махачкала',
     'хабаровск',
     'оренбург',
     'новокузнецк',
     'кемерово',
     'рязань',
     'томск',
     'астрахань',
     'пенза',
     'липецк',
     'тула',
     'киров',
     'чебоксары',
     'калининград',
     'брянск',
     'курск',
     'иваново',
     'магнитогорск',
     'тверь',
     'ставрополь',
     'симферополь',
     'белгород',
     'архангельск',
     'владимир',
     'севастополь',
     'сочи',
     'курган',
     'смоленск',
     'калуга',
     'чита',
     'орёл',
     'волжский',
     'череповец',
     'владикавказ',
     'мурманск',
     'сургут',
     'вологда',
     'саранск',
     'тамбов',
     'стерлитамак',
     'грозный',
     'якутск',
     'кострома',
     'петрозаводск',
     'таганрог',
     'нижневартовск',
     'братск',
     'новороссийск',
     'дзержинск',
     'шахта',
     'нальчик',
     'орск',
     'сыктывкар',
     'нижнекамск',
     'ангарск',
     'балашиха',
     'благовещенск',
     'прокопьевск',
     'химки',
     'псков',
     'бийск',
     'энгельс',
     'рыбинск',
     'балаково',
     'северодвинск',
     'армавир',
     'подольск',
     'королёв',
     'сызрань',
     'норильск',
     'златоуст',
     'мытищи',
     'люберцы',
     'волгодонск',
     'новочеркасск',
     'абакан',
     'находка',
     'уссурийск',
     'березники',
     'салават',
     'электросталь',
     'миасс',
     'первоуральск',
     'рубцовск',
     'альметьевск',
     'ковровый',
     'коломна',
     'керчь',
     'майкоп',
     'пятигорск',
     'одинцово',
     'копейск',
     'хасавюрт',
     'новомосковск',
     'кисловодск',
     'серпухов',
     'новочебоксарск',
     'нефтеюганск',
     'димитровград',
     'нефтекамск',
     'черкесск',
     'дербент',
     'камышин',
     'невинномысск',
     'красногорск',
     'мур',
     'батайск',
     'новошахтинск',
     'ноябрьск',
     'кызыл',
     'октябрьский',
     'ачинск',
     'северск',
     'новокуйбышевск',
     'елец',
     'евпатория',
     'арзамас',
     'обнинск',
     'каспийск',
     'элиста',
     'пушкино',
     'жуковский',
     'междуреченск',
     'сарапул',
     'ессентуки',
     'воткинск',
     'ногинск',
     'тобольск',
     'ухта',
     'серов',
     'бердск',
     'мичуринск',
     'киселёвск',
     'новотроицк',
     'зеленодольск',
     'соликамск',
     'раменский',
     'домодедово',
     'магадан',
     'глазов',
     'железногорск',
     'канск',
     'назрань',
     'гатчина',
     'саров',
     'новоуральск',
     'воскресенск',
     'долгопрудный',
     'бугульма',
     'кузнецк',
     'губкин',
     'кинешма',
     'ейск',
     'реутов',
     'железногорск',
     'чайковский',
     'азов',
     'бузулук',
     'озёрск',
     'балашов',
     'юрга',
     'кропоткин',
     'клин',
     'зеленоград',
     'подмосковье',
     'адыгея',                                                                                 
     'алтай',
     'адыгея',
     'башкортостан',
     'башкирия',
     'бурятия',
     'дагестан',
     'ингушетия',
     'калмыкия',
     'карелия',
     'коми',
     'крым',
     'мордовия',
     'татарстан',
     'тыва',
     'удмуртия',
     'хакасия',
     'саха',
     'марий',
     'якутия',
     'минск'                                                                                  
})

GOROD_ABBR = in_caseless({
    'спб',
    'мск',
    'питер',
    'нск',   # Новосибирск
    'екб',   # Екатеринбург
})
def printer(value):
    value = value.replace('спб','Санкт-Петербург')
    value = value.replace('питер','Санкт-Петербург')
    value = value.replace('мос обл','Московская область')
    value = value.replace('мос.обл.','Московская область')
    return value.title()
GOROD_NAME = or_(
    rule(SIMPLE),
    COMPLEX,
    rule(GOROD_ABBR)
).interpretation(
    Settlement.name.normalized().custom(printer)
)

SIMPLE = and_(
    TITLE,
    or_(
        NOUN,
        ADJF  # Железнодорожный, Юбилейный
    )
)

COMPLEX = or_(
    rule(
        SIMPLE,
        DASH.optional(),
        SIMPLE
    ),
    rule(
        TITLE,
        DASH.optional(),
        caseless('на'),
        DASH.optional(),
        TITLE
    )
)

NAME = or_(
    rule(SIMPLE),
    COMPLEX
)

MAYBE_GOROD_NAME = or_(
    NAME,
    rule(NAME, '-', INT)
).interpretation(
    Settlement.name
)

GOROD_WORDS = or_(
    rule(normalized('город')),
    rule(
        caseless('г'),
        DOT.optional()
    )
).interpretation(
    Settlement.type.const('город')
)

GOROD = or_(
    rule(GOROD_WORDS, MAYBE_GOROD_NAME),
    rule(
        GOROD_WORDS.optional(),
        GOROD_NAME
    )
).interpretation(
    Settlement
)


##########
#
#  SETTLEMENT NAME
#
##########


ADJS = gram('ADJS')
SIMPLE = and_(
    or_(
        NOUN,  # Александровка, Заречье, Горки
        ADJS,  # Кузнецово
        ADJF,  # Никольское, Новая, Марьино
    ),
    TITLE
)

COMPLEX = rule(
    SIMPLE,
    DASH.optional(),
    SIMPLE
)

NAME = or_(
    rule(SIMPLE),
    COMPLEX
)

SETTLEMENT_NAME = or_(
    NAME,
    rule(NAME, '-', INT),
    rule(NAME, ANUM)
)


###########
#
#   SELO
#
#############


SELO_WORDS = or_(
    rule(
        caseless('с'),
        DOT.optional()
    ),
    rule(normalized('село'))
).interpretation(
    Settlement.type.const('село')
)

SELO_NAME = SETTLEMENT_NAME.interpretation(
    Settlement.name
)

SELO = rule(
    SELO_WORDS,
    SELO_NAME
).interpretation(
    Settlement
)


###########
#
#   DEREVNYA
#
#############


DEREVNYA_WORDS = or_(
    rule(
        caseless('д'),
        DOT.optional()
    ),
    rule(normalized('деревня'))
).interpretation(
    Settlement.type.const('деревня')
)

DEREVNYA_NAME = SETTLEMENT_NAME.interpretation(
    Settlement.name
)

DEREVNYA = rule(
    DEREVNYA_WORDS,
    DEREVNYA_NAME
).interpretation(
    Settlement
)


###########
#
#   POSELOK
#
#############


POSELOK_WORDS = or_(
    rule(
        in_caseless({'п', 'пос'}),
        DOT.optional()
    ),
    rule(normalized('посёлок')),
    rule(
        caseless('р'),
        DOT.optional(),
        caseless('п'),
        DOT.optional()
    ),
    rule(
        normalized('рабочий'),
        normalized('посёлок')
    ),
    rule(
        caseless('пгт'),
        DOT.optional()
    ),
    rule(
        caseless('п'), DOT, caseless('г'), DOT, caseless('т'),
        DOT.optional()
    ),
    rule(
        normalized('посёлок'),
        normalized('городского'),
        normalized('типа'),
    ),
).interpretation(
    Settlement.type.const('посёлок')
)

POSELOK_NAME = SETTLEMENT_NAME.interpretation(
    Settlement.name
)

POSELOK = rule(
    POSELOK_WORDS,
    POSELOK_NAME
).interpretation(
    Settlement
)


##############
#
#   ADDR PERSON
#
############


ABBR = and_(
    length_eq(1),
    is_title()
)

PART = and_(
    TITLE,
    or_(
        gram('Name'),
        gram('Surn')
    )
)

MAYBE_FIO = or_(
    rule(TITLE, PART),
    rule(PART, TITLE),
    rule(ABBR, '.', TITLE),
    rule(ABBR, '.', ABBR, '.', TITLE),
    rule(TITLE, ABBR, '.', ABBR, '.')
)

POSITION_WORDS_ = or_(
    rule(
        dictionary({
            'мичман',
            'геолог',
            'подводник',
            'краевед',
            'снайпер',
            'штурман',
            'бригадир',
            'учитель',
            'политрук',
            'военком',
            'ветеран',
            'историк',
            'пулемётчик',
            'авиаконструктор',
            'адмирал',
            'академик',
            'актер',
            'актриса',
            'архитектор',
            'атаман',
            'врач',
            'воевода',
            'генерал',
            'губернатор',
            'хирург',
            'декабрист',
            'разведчик',
            'граф',
            'десантник',
            'конструктор',
            'скульптор',
            'писатель',
            'поэт',
            'капитан',
            'князь',
            'комиссар',
            'композитор',
            'космонавт',
            'купец',
            'лейтенант',
            'лётчик',
            'майор',
            'маршал',
            'матрос',
            'подполковник',
            'полковник',
            'профессор',
            'сержант',
            'старшина',
            'танкист',
            'художник',
            'герой',
            'княгиня',
            'строитель',
            'дружинник',
            'диктор',
            'прапорщик',
            'артиллерист',
            'графиня',
            'большевик',
            'патриарх',
            'сварщик',
            'офицер',
            'рыбак',
            'брат',
        })
    ),
    rule(normalized('генерал'), normalized('армия')),
    rule(normalized('герой'), normalized('россия')),
    rule(
        normalized('герой'),
        normalized('российский'), normalized('федерация')),
    rule(
        normalized('герой'),
        normalized('советский'), normalized('союз')
    ),
)

ABBR_POSITION_WORDS = rule(
    in_caseless({
        'адм',
        'ак',
        'акад',
    }),
    DOT.optional()
)

POSITION_WORDS = or_(
    POSITION_WORDS_,
    ABBR_POSITION_WORDS
)

MAYBE_PERSON = or_(
    MAYBE_FIO,
    rule(POSITION_WORDS, MAYBE_FIO),
    rule(POSITION_WORDS, TITLE)
)


###########
#
#   IMENI
#
##########


IMENI_WORDS = or_(
    rule(
        caseless('им'),
        DOT.optional()
    ),
    rule(caseless('имени'))
)

IMENI = or_(
    rule(
        IMENI_WORDS.optional(),
        MAYBE_PERSON
    ),
    rule(
        IMENI_WORDS,
        TITLE
    )
)

##########
#
#   LET
#
##########


LET_WORDS = or_(
    rule(caseless('лет')),
    rule(
        DASH.optional(),
        caseless('летия')
    )
)

LET_NAME = in_caseless({
    'влксм',
    'ссср',
    'алтая',
    'башкирии',
    'бурятии',
    'дагестана',
    'калмыкии',
    'колхоза',
    'комсомола',
    'космонавтики',
    'москвы',
    'октября',
    'пионерии',
    'победы',
    'приморья',
    'района',
    'совхоза',
    'совхозу',
    'татарстана',
    'тувы',
    'удмуртии',
    'улуса',
    'хакасии',
    'целины',
    'чувашии',
    'якутии'
})

LET = rule(
    INT,
    LET_WORDS,
    LET_NAME
)


##########
#
#    ADDR DATE
#
#############


MONTH_WORDS = dictionary({
    'январь',
    'февраль',
    'март',
    'апрель',
    'май',
    'июнь',
    'июль',
    'август',
    'сентябрь',
    'октябрь',
    'ноябрь',
    'декабрь',
})

DAY = and_(
    INT,
    gte(1),
    lte(31)
)

YEAR = and_(
    INT,
    gte(1),
    lte(2100)
)

YEAR_WORDS = normalized('год')

DATE = or_(
    rule(DAY, MONTH_WORDS),
    rule(YEAR, YEAR_WORDS)
)


#########
#
#   MODIFIER
#
############


MODIFIER_WORDS_ = rule(
    dictionary({
        'большой',
        'малый',
        'средний',

        'верхний',
        'центральный',
        'нижний',
        'северный',
        'дальний',

        'первый',
        'второй',

        'старый',
        'новый',

        'красный',
        'лесной',
        'тихий',
    }),
    DASH.optional()
)

ABBR_MODIFIER_WORDS = rule(
    in_caseless({
        'б', 'м', 'н'
    }),
    DOT.optional()
)

SHORT_MODIFIER_WORDS = rule(
    in_caseless({
        'больше',
        'мало',
        'средне',

        'верх',
        'верхне',
        'центрально',
        'нижне',
        'северо',
        'дальне',
        'восточно',
        'западно',

        'перво',
        'второ',

        'старо',
        'ново',

        'красно',
        'тихо',
        'горно',
    }),
    DASH.optional()
)

MODIFIER_WORDS = or_(
    MODIFIER_WORDS_,
    ABBR_MODIFIER_WORDS,
    SHORT_MODIFIER_WORDS,
)


##########
#
#   ADDR NAME
#
##########


ROD = gram('gent')

SIMPLE = and_(
    or_(
        ADJF,  # Школьная
        and_(NOUN, ROD),  # Ленина, Победы
    ),
    TITLE
)

COMPLEX = or_(
    rule(
        and_(ADJF, TITLE),
        NOUN
    ),
    rule(
        TITLE,
        DASH.optional(),
        TITLE
    ),
)

# TODO
EXCEPTION = dictionary({
    'арбат',
    'варварка'
})

MAYBE_NAME = or_(
    rule(SIMPLE),
    COMPLEX,
    rule(EXCEPTION)
)

NAME = or_(
    MAYBE_NAME,
    LET,
    DATE,
    IMENI
)

NAME = rule(
    MODIFIER_WORDS.optional(),
    NAME
)

ADDR_CRF = tag('I').repeatable()

NAME = or_(
    NAME,
    ANUM,
    rule(NAME, ANUM),
    rule(ANUM, NAME),
    rule(INT, DASH.optional(), NAME),
    rule(NAME, DASH, INT),
    ADDR_CRF
)

ADDR_NAME = NAME


########
#
#    STREET
#
#########


STREET_WORDS = or_(
    rule(normalized('улица')),
    rule(
        caseless('ул'),
        DOT.optional()
    )
).interpretation(
    Street.type.const('улица')
)

STREET_NAME = ADDR_NAME.interpretation(
    Street.name
)

STREET = or_(
    rule(STREET_WORDS, STREET_NAME),
    rule(STREET_NAME, STREET_WORDS)
).interpretation(
    Street
)


##########
#
#    PROSPEKT
#
##########


PROSPEKT_WORDS = or_(
    rule(
        in_caseless({'пр', 'просп'}),
        DOT.optional()
    ),
    rule(
        caseless('пр'),
        '-',
        in_caseless({'кт', 'т'}),
        DOT.optional()
    ),
    rule(normalized('проспект'))
).interpretation(
    Street.type.const('проспект')
)

PROSPEKT_NAME = ADDR_NAME.interpretation(
    Street.name
)

PROSPEKT = or_(
    rule(PROSPEKT_WORDS, PROSPEKT_NAME),
    rule(PROSPEKT_NAME, PROSPEKT_WORDS)
).interpretation(
    Street
)


############
#
#    PROEZD
#
#############


PROEZD_WORDS = or_(
    rule(caseless('пр'), DOT.optional()),
    rule(
        caseless('пр'),
        '-',
        in_caseless({'зд', 'д'}),
        DOT.optional()
    ),
    rule(normalized('проезд'))
).interpretation(
    Street.type.const('проезд')
)

PROEZD_NAME = ADDR_NAME.interpretation(
    Street.name
)

PROEZD = or_(
    rule(PROEZD_WORDS, PROEZD_NAME),
    rule(PROEZD_NAME, PROEZD_WORDS)
).interpretation(
    Street
)


###########
#
#   PEREULOK
#
##############


PEREULOK_WORDS = or_(
    rule(
        caseless('п'),
        DOT
    ),
    rule(
        caseless('пер'),
        DOT.optional()
    ),
    rule(normalized('переулок'))
).interpretation(
    Street.type.const('переулок')
)

PEREULOK_NAME = ADDR_NAME.interpretation(
    Street.name
)

PEREULOK = or_(
    rule(PEREULOK_WORDS, PEREULOK_NAME),
    rule(PEREULOK_NAME, PEREULOK_WORDS)
).interpretation(
    Street
)


########
#
#  PLOSHAD
#
##########


PLOSHAD_WORDS = or_(
    rule(
        caseless('пл'),
        DOT.optional()
    ),
    rule(normalized('площадь'))
).interpretation(
    Street.type.const('площадь')
)

PLOSHAD_NAME = ADDR_NAME.interpretation(
    Street.name
)

PLOSHAD = or_(
    rule(PLOSHAD_WORDS, PLOSHAD_NAME),
    rule(PLOSHAD_NAME, PLOSHAD_WORDS)
).interpretation(
    Street
)


############
#
#   SHOSSE
#
###########


# TODO
# Покровское 17 км.
# Сергеляхское 13 км
# Сергеляхское 14 км.


SHOSSE_WORDS = or_(
    rule(
        caseless('ш'),
        DOT
    ),
    rule(normalized('шоссе'))
).interpretation(
    Street.type.const('шоссе')
)

SHOSSE_NAME = ADDR_NAME.interpretation(
    Street.name
)

SHOSSE = or_(
    rule(SHOSSE_WORDS, SHOSSE_NAME),
    rule(SHOSSE_NAME, SHOSSE_WORDS)
).interpretation(
    Street
)


########
#
#  NABEREG
#
##########


NABEREG_WORDS = or_(
    rule(
        caseless('наб'),
        DOT.optional()
    ),
    rule(normalized('набережная'))
).interpretation(
    Street.type.const('набережная')
)

NABEREG_NAME = ADDR_NAME.interpretation(
    Street.name
)

NABEREG = or_(
    rule(NABEREG_WORDS, NABEREG_NAME),
    rule(NABEREG_NAME, NABEREG_WORDS)
).interpretation(
    Street
)


########
#
#  BULVAR
#
##########


BULVAR_WORDS = or_(
    rule(
        caseless('б'),
        '-',
        caseless('р')
    ),
    rule(
        caseless('б'),
        DOT
    ),
    rule(
        caseless('бул'),
        DOT.optional()
    ),
    rule(normalized('бульвар'))
).interpretation(
    Street.type.const('бульвар')
)

BULVAR_NAME = ADDR_NAME.interpretation(
    Street.name
)

BULVAR = or_(
    rule(BULVAR_WORDS, BULVAR_NAME),
    rule(BULVAR_NAME, BULVAR_WORDS)
).interpretation(
    Street
)


##############
#
#   ADDR VALUE
#
#############


LETTER = in_caseless(set('абвгдежзиклмнопрстуфхшщэюя'))

QUOTE = in_(QUOTES)

LETTER = or_(
    rule(LETTER),
    rule(QUOTE, LETTER, QUOTE)
)

VALUE = rule(
    INT,
    LETTER.optional()
)

SEP = in_(r'/\-')

VALUE = or_(
    rule(VALUE),
    rule(VALUE, SEP, VALUE),
    rule(VALUE, SEP, LETTER)
)

ADDR_VALUE = rule(
    eq('№').optional(),
    VALUE
)


############
#
#    DOM
#
#############


DOM_WORDS = or_(
    rule(normalized('дом')),
    rule(
        caseless('д'),
        DOT
    )
).interpretation(
    Building.type.const('дом')
)

DOM_VALUE = ADDR_VALUE.interpretation(
    Building.number
)

DOM = rule(
    DOM_WORDS,
    DOM_VALUE
).interpretation(
    Building
)


###########
#
#  KORPUS
#
##########


KORPUS_WORDS = or_(
    rule(
        in_caseless({'корп', 'кор'}),
        DOT.optional()
    ),
    rule(normalized('корпус'))
).interpretation(
    Building.type.const('корпус')
)

KORPUS_VALUE = ADDR_VALUE.interpretation(
    Building.number
)

KORPUS = or_(
    rule(
        KORPUS_WORDS,
        KORPUS_VALUE
    ),
    rule(
        KORPUS_VALUE,
        KORPUS_WORDS
    )
).interpretation(
    Building
)


###########
#
#  STROENIE
#
##########


STROENIE_WORDS = or_(
    rule(
        caseless('стр'),
        DOT.optional()
    ),
    rule(normalized('строение'))
).interpretation(
    Building.type.const('строение')
)

STROENIE_VALUE = ADDR_VALUE.interpretation(
    Building.number
)

STROENIE = rule(
    STROENIE_WORDS,
    ADDR_VALUE
).interpretation(
    Building
)


###########
#
#   OFIS
#
#############


OFIS_WORDS = or_(
    rule(
        caseless('оф'),
        DOT.optional()
    ),
    rule(normalized('офис'))
).interpretation(
    Room.type.const('офис')
)

OFIS_VALUE = ADDR_VALUE.interpretation(
    Room.number
)

OFIS = rule(
    OFIS_WORDS,
    OFIS_VALUE
).interpretation(
    Room
)


###########
#
#   KVARTIRA
#
#############


KVARTIRA_WORDS = or_(
    rule(
        caseless('кв'),
        DOT.optional()
    ),
    rule(normalized('квартира'))
).interpretation(
    Room.type.const('квартира')
)

KVARTIRA_VALUE = ADDR_VALUE.interpretation(
    Room.number
)

KVARTIRA = rule(
    KVARTIRA_WORDS,
    KVARTIRA_VALUE
).interpretation(
    Room
)


###########
#
#   INDEX
#
#############


INDEX = and_(
    INT,
    gte(100000),
    lte(999999)
).interpretation(
    Index.value
).interpretation(
    Index
)


#############
#
#   ADDR PART
#
############


ADDR_PART = or_(
  # COUNTRY,
    FED_OKRUG,

    RESPUBLIKA,
    KRAI,
    OBLAST,
    AUTO_OKRUG,
    RAION,
    GOROD,
    #DEREVNYA,
    #SELO,
    #POSELOK,

    STREET,
    PROSPEKT,
    PROEZD,
    PEREULOK,
    PLOSHAD,
    SHOSSE,
    NABEREG,
    BULVAR,

    DOM,
    KORPUS,
    STROENIE,
    OFIS,
    KVARTIRA
).interpretation(
    AddrPart.value
).interpretation(
    AddrPart
)